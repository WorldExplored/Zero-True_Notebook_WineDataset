notebookId = "9a6c9a5f-feb6-4f57-8426-24af35695744"
notebookName = "Zero True"

[cells.c224c72d-3439-4260-b0fe-60e2169556a7]
cellName = ""
cellType = "code"
hideCell = "False"
hideCode = "False"
expandCode = "False"
showTable = "False"
nonReactive = "False"
code = """
import pandas as pd
from sklearn.datasets import load_wine
import zero_true as zt

# Load the wine dataset
wine = load_wine()

# Create a DataFrame from the wine dataset
wine_df = pd.DataFrame(data=wine.data, columns=wine.feature_names)

# Add a column for the wine labels
wine_df['wine_class'] = [wine.target_names[i] for i in wine.target]


#wine_df.columns = [col.replace(' ', '_') for col in wine_df.columns]

alcohol_slider = zt.RangeSlider(id='alcohol',
                                min=wine_df.alcohol.min(),
                                max=wine_df.alcohol.max(),
                                step=0.1, label='Alcohol')

malic_acid_slider = zt.RangeSlider(id='malic_acid',
                                   min=wine_df.malic_acid.min(),
                                   max=wine_df.malic_acid.max(),
                                   step=0.01, label='Malic Acid')

# Example sliders for other features can be created in a similar fashion.

import plotly.express as px
import zero_true as zt

# Assuming wine_df is your DataFrame name and it's already loaded with the wine dataset
fig = px.scatter(wine_df, x='alcohol', y='malic_acid', color='color_intensity',
                 size='hue', hover_data=['proline'])

fig.update_layout(
    title='Wine Dataset: Alcohol vs. Malic Acid',
    xaxis_title='Alcohol (%)',
    yaxis_title='Malic Acid'
)

zt.PlotlyComponent.from_figure(id='wine_plt', figure=fig)
"""

[cells.059df3da-c283-41ca-af71-35934be7c617]
cellName = ""
cellType = "code"
hideCell = "False"
hideCode = "False"
expandCode = "False"
showTable = "False"
nonReactive = "False"
code = """
import pandas as pd
from sklearn.datasets import load_wine
import zero_true as zt
import plotly.express as px

# Load the dataset and create DataFrame as before
wine = load_wine()
wine_df = pd.DataFrame(data=wine.data, columns=wine.feature_names)
wine_df['wine_class'] = wine.target

# Correctly mapping target names
wine_df['wine_class'] = wine_df['wine_class'].apply(lambda x: wine.target_names[x])

# Define sliders
alcohol_slider = zt.RangeSlider(id='alcohol', min=wine_df.alcohol.min(), max=wine_df.alcohol.max(), step=0.1, label='Alcohol')
malic_acid_slider = zt.RangeSlider(id='malic_acid', min=wine_df.malic_acid.min(), max=wine_df.malic_acid.max(), step=0.01, label='Malic Acid')

# Define the callback function
def update_graph():
    # Filter the DataFrame based on slider values
    filtered_df = wine_df[(wine_df.alcohol >= alcohol_slider.value[0]) & (wine_df.alcohol <= alcohol_slider.value[1]) &
                          (wine_df.malic_acid >= malic_acid_slider.value[0]) & (wine_df.malic_acid <= malic_acid_slider.value[1])]
    
    # Create a new figure with filtered data
    fig = px.scatter(filtered_df, x='alcohol', y='malic_acid', color='wine_class',
                     hover_data=['proline'])

    fig.update_layout(
        title='Wine Dataset: Alcohol vs. Malic Acid',
        xaxis_title='Alcohol (%)',
        yaxis_title='Malic Acid'
    )

    zt.PlotlyComponent.from_figure(id='wine_plt', figure=fig)

# Filter the DataFrame based on slider values
wline_df = wine_df[(wine_df.alcohol >= alcohol_slider.value[0]) & (wine_df.alcohol <= alcohol_slider.value[1]) &
                        (wine_df.malic_acid >= malic_acid_slider.value[0]) & (wine_df.malic_acid <= malic_acid_slider.value[1])]

fig = px.scatter(wline_df, x='alcohol', y='malic_acid', color='wine_class',
                     hover_data=['proline'])

fig.update_layout(
    title='Wine Dataset: Alcohol vs. Malic Acid',
    xaxis_title='Alcohol (%)',
    yaxis_title='Malic Acid'
)
zt.PlotlyComponent.from_figure(id='wine_plti', figure=fig)
"""

